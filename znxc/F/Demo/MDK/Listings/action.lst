C251 COMPILER V5.60.0,  action                                                             04/09/24  12:53:34  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE action
OBJECT MODULE PLACED IN .\Objects\action.obj
COMPILER INVOKED BY: D:\keilC251\C251\BIN\C251.EXE ..\CODE\action.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\CODE;.
                    -.\USER;..\..\lib\zf_app;..\..\lib\zf_base;..\..\lib\zf_bsp) DEBUG PRINT(.\Listings\action.lst) TABS(2) OBJECT(.\Objects\
                    -action.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          float speed_goal=300;
    3          float error=0;
    4          float error_rate=0;
    5          int count=0;
    6          int Cross_Flag=0;
    7          void Track_Action()
    8          {
    9   1        if(Cross_Flag==1)
   10   1        {
   11   2          Sum_Distance+=(motor_L_pid.ActValue+motor_R_pid.ActValue)*isr_time*0.5;
   12   2          if(Sum_Distance<200)
   13   2          {
   14   3            flag_turn=cross;
   15   3            //P67=1;
   16   3          }
   17   2          else  
   18   2          {
   19   3          Cross_Flag=0;
   20   3            P67=0;
   21   3          }     
   22   2        }
   23   1        else
   24   1        {
   25   2          if(L_S_Adc<10&&R_S_Adc<10&&L_Adc>25&&R_Adc>25)
   26   2        {
   27   3          flag_turn=normal;
   28   3        //  P67=0;    
   29   3        }
   30   2        else if(L_S_Adc>20&&R_S_Adc>20&&L_Adc>20&&R_Adc>20&&M_Adc>40)//ÔÚÊ®×ÖµÄÊ±ºò,µç¸ÐÖµÇé¿ö:ÖÐ¼äºÍÁ½±ßµÄË®Æ½µ
             -ç¸ÐÊýÖµ±ä»¯Ð¡,ÖÐ¼äÁ½¿ÅÊúÖ±µç¸ÐµÄ±ä»¯´ó
   31   2        {
   32   3         Sum_Distance=0;
   33   3          Cross_Flag = 1;
   34   3          
   35   3        //  P67=0;    
   36   3        }
   37   2        else
   38   2        {
   39   3        //  P67=0;
   40   3          flag_turn=right_angle;  
   41   3          
   42   3        }     
   43   2        }
   44   1        speed_goal=speed_section(flag_turn);  
   45   1        error=error_get(flag_turn);
   46   1        Dir_Loop(error,speed_goal,flag_turn);
   47   1      }
   48          
   49            
   50          void Circ_Left_Action()
   51          {
   52   1        speed_goal=speed_section(flag_turn);
   53   1        error=error_get(flag_turn);
   54   1        switch (Flag_Circ)
   55   1        { 
   56   2          case 1:
C251 COMPILER V5.60.0,  action                                                             04/09/24  12:53:34  PAGE 2   

   57   2          speed_goal= 200;
   58   2          Dir_Loop(error,speed_goal,flag_turn);
   59   2          break;
   60   2          case 2:
   61   2            error=LC_err2;
   62   2          speed_goal= 200;
   63   2          //speed_goal=speed_section(flag_turn);
   64   2            Dir_Loop(error, speed_goal,flag_turn);
   65   2          break;
   66   2          case 3:
   67   2            speed_goal= 200;
   68   2          //speed_goal=speed_section(flag_turn);
   69   2          Dir_Loop(error,speed_goal,flag_turn);
   70   2          break;
   71   2          case 4:
   72   2          motor_L_pid.SetValue=speed_goal;
   73   2          motor_R_pid.SetValue=speed_goal;
   74   2          break;
   75   2        }
   76   1      }
   77          void Circ_Right_Action()
   78          {
   79   1          speed_goal=speed_section(flag_turn);
   80   1        error=error_get(flag_turn);
   81   1        switch (Flag_Circ)
   82   1        { 
   83   2          case 1:
   84   2          speed_goal= 200;
   85   2          Dir_Loop(error,speed_goal,flag_turn);
   86   2          break;
   87   2          case 2:
   88   2            error=RC_err2;
   89   2          speed_goal= 200;
   90   2          //speed_goal=speed_section(flag_turn);
   91   2            Dir_Loop(error, speed_goal,flag_turn);
   92   2          break;
   93   2          case 3:
   94   2            speed_goal= 200;
   95   2          //speed_goal=speed_section(flag_turn);
   96   2          Dir_Loop(error,speed_goal,flag_turn);
   97   2          break;
   98   2          case 4:
   99   2            //speed_goal= 200;
  100   2          motor_L_pid.SetValue=speed_goal;
  101   2          motor_R_pid.SetValue=speed_goal;
  102   2          break;
  103   2        }
  104   1      }
  105          void Obstacle_Action(void)
  106          {
  107   1        switch(Flag_Obstacle)
  108   1        {
  109   2          case 1:
  110   2            error=BZ_err1;  
  111   2            speed_goal=BZ_sp1;
  112   2            //P67=1;
  113   2          //  speed_goal=speed_section(error,state[state_lead]);
  114   2            Dir_Loop(error,speed_goal,flag_turn);break;
  115   2          case 2:
  116   2            P67=0;
  117   2            error=BZ_err2;  
  118   2            speed_goal=BZ_sp2;
  119   2        //speed_goal=speed_section(error,state[state_lead]);
  120   2            Dir_Loop(error,speed_goal,flag_turn);break;
  121   2          case 3:
  122   2            error=BZ_err3;  
C251 COMPILER V5.60.0,  action                                                             04/09/24  12:53:34  PAGE 3   

  123   2            speed_goal=BZ_sp3;
  124   2          Dir_Loop(error,speed_goal,flag_turn);break;
  125   2          case 4:
  126   2            error = 0;
  127   2          speed_goal=BZ_sp3;      
  128   2          Dir_Loop(error,speed_goal,flag_turn);break;
  129   2        }
  130   1      }
  131          
  132          void Stop_Action()
  133          {
  134   1          motor_L_pid.SetValue=0;
  135   1          motor_R_pid.SetValue=0;
  136   1          motor_L_pid.KP=2.5;
  137   1          motor_R_pid.KP=2.5;
  138   1          motor_L_pid.KI=0;
  139   1          motor_R_pid.KI=0;
  140   1          motor_L_pid.KD=80;
  141   1          motor_R_pid.KD=80;
  142   1        
  143   1      }
  144          void beep_on()
  145          {
  146   1      
  147   1        {
  148   2            //P67=1;
  149   2        }
  150   1      
  151   1      }
  152          void beep_off()
  153          {
  154   1        P67=0;
  155   1        count=0;
  156   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       635     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        16     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        36     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
